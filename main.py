import sys
import os
import shutil
import subprocess
from PyQt5 import QtWidgets, QtCore, QtGui
from front import FileSelectionWindow
import file_worker as fw


class MainWindow(FileSelectionWindow):
    def __init__(self):
        super().__init__()
        self.file1_path = None
        self.file2_path = None
        self.project_dir = os.path.dirname(os.path.abspath(__file__))
        self.tables_dir = os.path.join(self.project_dir, 'Tables')
        self.generated_filename = "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫.xlsx"
        
        # –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É Tables –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        self.clean_tables_directory()
        
        self.connect_signals()
        self.clear_generated_file_list()
    
    def animateButton(self, button, animation):
        """–ê–Ω–∏–º–∏—Ä—É–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏"""
        original_geometry = button.geometry()
        animation.setStartValue(original_geometry)
        animation.setEndValue(QtCore.QRect(
            original_geometry.x() - 2,
            original_geometry.y() - 2,
            original_geometry.width() + 4,
            original_geometry.height() + 4
        ))
        animation.setDirection(QtCore.QPropertyAnimation.Forward)
        animation.start()
    
    def clean_tables_directory(self):
        """–û—á–∏—â–∞–µ—Ç –ø–∞–ø–∫—É Tables –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"""
        if os.path.exists(self.tables_dir):
            for filename in os.listdir(self.tables_dir):
                file_path = os.path.join(self.tables_dir, filename)
                try:
                    if os.path.isfile(file_path):
                        os.unlink(file_path)
                    elif os.path.isdir(file_path):
                        shutil.rmtree(file_path)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {file_path}: {e}")
    
    def connect_signals(self):
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
        self.select_file1_btn.clicked.connect(lambda: self.select_file(1))
        self.select_file2_btn.clicked.connect(lambda: self.select_file(2))
        self.generate_file_btn.clicked.connect(self.generate_file)
        self.generated_file_list.itemClicked.connect(self.on_file_clicked)
    
    def ensure_tables_directory(self):
        if not os.path.exists(self.tables_dir):
            os.makedirs(self.tables_dir)
    
    def clear_generated_file_list(self):
        self.generated_file_list.clear()
    
    def show_generated_file(self):
        self.clear_generated_file_list()
        
        generated_file_path = os.path.join(self.tables_dir, self.generated_filename)
        
        if os.path.exists(generated_file_path):
            item = QtWidgets.QListWidgetItem(f"üìä {self.generated_filename}")
            item.setData(QtCore.Qt.UserRole, generated_file_path)
            item.setTextAlignment(QtCore.Qt.AlignCenter)
            self.generated_file_list.addItem(item)
    
    def on_file_clicked(self, item):
        file_path = item.data(QtCore.Qt.UserRole)
        
        if os.path.exists(file_path):
            try:
                if sys.platform == "win32":
                    os.startfile(file_path)
                elif sys.platform == "darwin":
                    subprocess.run(["open", file_path])
                else:
                    subprocess.run(["xdg-open", file_path])
            except Exception as e:
                QtWidgets.QMessageBox.warning(
                    self,
                    '–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è',
                    f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª: {str(e)}'
                )
        else:
            QtWidgets.QMessageBox.warning(
                self,
                '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω',
                f'–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {file_path}'
            )
    
    def validate_excel_file(self, file_path):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è Excel —Ñ–∞–π–ª–æ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞"""
        excel_extensions = {'.xlsx', '.xls', '.xlsm', '.xlsb', '.xltx', '.xltm'}
        file_ext = os.path.splitext(file_path)[1].lower()
        return file_ext in excel_extensions
    
    def animate_file_selection(self, file_number):
        """–ê–Ω–∏–º–∏—Ä—É–µ—Ç –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞"""
        if file_number == 1:
            self.animateButton(self.select_file1_btn, self.file1_animation)
        else:
            self.animateButton(self.select_file2_btn, self.file2_animation)
    
    def animate_generate(self):
        """–ê–Ω–∏–º–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
        self.animateButton(self.generate_file_btn, self.generate_animation)
    
    def select_file(self, file_number):
        """–í—ã–±–æ—Ä –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (1 –∏–ª–∏ 2)"""
        # –ê–Ω–∏–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
        self.animate_file_selection(file_number)
        
        # –î–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è
        QtCore.QTimer.singleShot(200, lambda: self._process_file_selection(file_number))
    
    def _process_file_selection(self, file_number):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏"""
        file_path, _ = QtWidgets.QFileDialog.getOpenFileName(
            self,
            f'–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª {file_number}',
            '',
            'Excel files (*.xlsx *.xls *.xlsm *.xlsb *.xltx *.xltm);;–í—Å–µ —Ñ–∞–π–ª—ã (*)'
        )
        
        if file_path:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞
            if not self.validate_excel_file(file_path):
                QtWidgets.QMessageBox.warning(
                    self,
                    '–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç',
                    f'–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∏–º–µ–µ—Ç –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç.\n\n'
                    f'–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: xlsx, xls, xlsm, xlsb, xltx, xltm'
                )
                return
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
            if file_number == 1:
                self.file1_path = file_path
                self.file1_label.setText(f'‚úÖ –§–∞–π–ª 1:\n{os.path.basename(file_path)}')
                self.copy_file_to_tables(file_path, 'file1.xlsx')
            else:
                self.file2_path = file_path
                self.file2_label.setText(f'‚úÖ –§–∞–π–ª 2:\n{os.path.basename(file_path)}')
                self.copy_file_to_tables(file_path, 'file2.xlsx')
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
            QtWidgets.QMessageBox.information(
                self,
                '–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω',
                f'–§–∞–π–ª {file_number} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!\n\n'
                f'{os.path.basename(file_path)}'
            )
    
    def copy_file_to_tables(self, source_path, target_filename):
        """–ö–æ–ø–∏—Ä—É–µ—Ç –æ–¥–∏–Ω —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É Tables"""
        try:
            self.ensure_tables_directory()
            target_path = os.path.join(self.tables_dir, target_filename)
            shutil.copy2(source_path, target_path)
            return True
        except Exception as e:
            QtWidgets.QMessageBox.critical(
                self,
                '–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è',
                f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª: {str(e)}'
            )
            return False
    
    def check_files_ready(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≥–æ—Ç–æ–≤—ã –ª–∏ –æ–±–∞ —Ñ–∞–π–ª–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
        messages = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±–∞ —Ñ–∞–π–ª–∞ –≤—ã–±—Ä–∞–Ω—ã
        if not self.file1_path:
            messages.append("‚Ä¢ –§–∞–π–ª 1 –Ω–µ –≤—ã–±—Ä–∞–Ω")
        if not self.file2_path:
            messages.append("‚Ä¢ –§–∞–π–ª 2 –Ω–µ –≤—ã–±—Ä–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ Tables
        file1_exists = os.path.exists(os.path.join(self.tables_dir, 'file1.xlsx'))
        file2_exists = os.path.exists(os.path.join(self.tables_dir, 'file2.xlsx'))
        
        if self.file1_path and not file1_exists:
            messages.append("‚Ä¢ –§–∞–π–ª 1 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ Tables")
        if self.file2_path and not file2_exists:
            messages.append("‚Ä¢ –§–∞–π–ª 2 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ Tables")
        
        if messages:
            error_msg = "–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n\n" + "\n".join(messages)
            QtWidgets.QMessageBox.warning(
                self,
                '–§–∞–π–ª—ã –Ω–µ –≥–æ—Ç–æ–≤—ã',
                error_msg
            )
            return False
        
        return True
    
    def generate_file(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ"""
        # –ê–Ω–∏–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        self.animate_generate()
        
        # –î–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è
        QtCore.QTimer.singleShot(200, self._process_generation)
    
    def _process_generation(self):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤
            if not self.check_files_ready():
                return
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º QProgressDialog –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            progress_dialog = QtWidgets.QProgressDialog(self)
            progress_dialog.setWindowTitle('–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∞–π–ª–∞')
            progress_dialog.setLabelText('–ò–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ—Ü–µ–Ω–æ–∫.xlsx"...')
            progress_dialog.setCancelButton(None)
            progress_dialog.setRange(0, 0)
            progress_dialog.setModal(True)
            progress_dialog.setStyleSheet("""
                QProgressDialog {
                    background: white;
                    border: 2px solid #6a11cb;
                    border-radius: 10px;
                }
                QLabel {
                    color: #333333;
                    font-size: 14px;
                }
            """)
            progress_dialog.show()
            
            QtWidgets.QApplication.processEvents()
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ñ–∞–π–ª–∞
            self.ensure_tables_directory()
            success = fw.create_file(self)
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
            progress_dialog.close()
            
            if success:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ —Å–ø–∏—Å–∫–µ
                self.show_generated_file()
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –¥–∏–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞
                success_dialog = QtWidgets.QMessageBox(self)
                success_dialog.setWindowTitle('‚úÖ –§–∞–π–ª —Å–æ–∑–¥–∞–Ω')
                success_dialog.setText(
                    f'–§–∞–π–ª "{self.generated_filename}" —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n'
                    '–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å.'
                )
                success_dialog.setStyleSheet("""
                    QMessageBox {
                        background: white;
                        border: 2px solid #6a11cb;
                        border-radius: 15px;
                    }
                    QLabel {
                        color: #333333;
                        font-size: 14px;
                    }
                    QPushButton {
                        background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                                  stop: 0 #6a11cb, stop: 1 #2575fc);
                        color: white;
                        border: none;
                        border-radius: 10px;
                        padding: 8px 15px;
                        font-size: 12px;
                        font-weight: bold;
                    }
                """)
                success_dialog.exec_()
            
        except Exception as e:
            error_dialog = QtWidgets.QMessageBox(self)
            error_dialog.setIcon(QtWidgets.QMessageBox.Critical)
            error_dialog.setWindowTitle('‚ùå –û—à–∏–±–∫–∞')
            error_dialog.setText(f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª: {str(e)}')
            error_dialog.setStyleSheet("""
                QMessageBox {
                    background: white;
                    border: 2px solid #ff4444;
                    border-radius: 15px;
                }
                QLabel {
                    color: #333333;
                    font-size: 14px;
                }
                QPushButton {
                    background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                              stop: 0 #ff4444, stop: 1 #cc0000);
                    color: white;
                    border: none;
                    border-radius: 10px;
                    padding: 8px 15px;
                    font-size: 12px;
                    font-weight: bold;
                }
            """)
            error_dialog.exec_()

def main():
    app = QtWidgets.QApplication(sys.argv)
    app.setApplicationName('S.S.S.')
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())

if __name__ == '__main__':
    main()